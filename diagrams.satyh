@require: base/list-ext

@import: tikzyfi
@import: colors
@import: math-deco

open TikZyFi

let prev ctx = ctx 
    |> fc Colors.black 
    |> style [set-text-color Colors.white]
let contra ctx = ctx 
    |> fc Colors.red 
    |> style [set-text-color Colors.white]
let large-graph-cfg = 
  (|  default with 
      default-node-style = default-node-style |> circle 
          |> padding  4pt 
          |> distance 6pt;
      unit-length = 1.25cm;
  |) 

let large-graph-matrix = 
      matrix
          [ [ empty; empty; empty ;  node?:[named `2`; prev] {${2}} ]
        ; [ empty; node?:[named `5`]{${5}}
          ; node?:[named `1`; prev] {${1}}
          ; node?:[named `8`] {${8}}; empty; empty; node?:[named `-12`; padding 1.5pt; contra] {${\widebar{12}}}
          ]
        ; [ node?:[named `4`]{${4}}; node?:[named `3`; prev] {${3}}
          ; node?:[named `7`]{${7}}; empty; node?:[named `10`; padding 1.5pt] {${10}}
          ]
        ; [ empty; node?:[named `-6`]{${\widebar{6}}}; empty
          ; node?:[named `9`] {${9}}; empty
          ; node?:[named `11`; padding 1.5pt] {${11}}
          ; node?:[named `12`; padding 1.5pt; contra] {${12}}
        ]
        ]

let large-graph-nodes =
  large-graph-matrix ::
  [arrow (west-of `1`) (east-of `5`)
  ; arrow (south-of `1`) (north-of `7`)
  ; arrow (south-west-of `2`) (north-east-of `5`)
  ; arrow (south-east-of `2`) (north-west-of `-12`)
  ; arrow (north-of `3`) (south-of `5`)
  ; arrow (south-of `3`) (north-of `-6`)
  ; arrow (north-east-of `4`) (south-west-of `5`)
  ; arrow (south-east-of `4`) (north-west-of `-6`)
  ; arrow (south-east-of `5`) (north-west-of `7`)
  ; arrow (north-east-of `-6`) (south-west-of `7`)
  ; arrow (north-east-of `7`) (south-west-of `8`)
  ; arrow (south-east-of `7`) (north-west-of `9`)
  ; arrow (south-east-of `8`) (north-west-of `10`)
  ; arrow (north-east-of `9`) (south-west-of `10`)
  ; arrow (north-east-of `10`) (south-west-of `-12`)
  ; arrow (south-east-of `10`) (north-west-of `11`)
  ; arrow (east-of `11`) (west-of `12`)
  ]
